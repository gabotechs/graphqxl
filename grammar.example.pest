        whitespace = _{ (" " | "\t" | "\r" | "\n") + }

        comment = _{ "#" ~ (!("\n") ~ ANY)* ~ "\n" }
        letters = _{ 'A'..'Z' | 'a'..'z' }
        exp     = _{ ("e" | "E") ~ ("+" | "-")? ~ '1'..'9'+ }
        hex     = _{ '0'..'9' | 'a'..'f' | 'A'..'F' }
        unicode = _{ "u" ~ hex ~ hex ~ hex ~ hex }
        escape  = _{ "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t" | unicode) }

        op_true  = { "true" }
        op_false = { "false" }
        boolean  = _{ op_true | op_false }
        null     = { "null" }
        int      = @{ "-"? ~ ("0" | '1'..'9' ~ '0'..'9'*) }
        float    = @{
            "-"? ~
                (
                    '1'..'9'+ ~ exp |
                    "0" ~ "." ~ '0'..'9'+ ~ exp? |
                    '1'..'9' ~ '0'..'9'* ~ "." ~ '0'..'9'+ ~ exp?
                )
        }
        string   = @{ "\"" ~ (escape | !("\"" | "\\") ~ ANY)* ~ "\"" }
        variable = @{ "$" ~ name }
        enum_val = @{ !(boolean | null) ~ name }
        list     = @{ "[" ~ value ~ "]" }
        arg      = { name ~ ":" ~ value }
        object   = { "{" ~ (arg ~ ("," ~ arg)*)? ~ "}" }

        name  = @{ ("_" | letters) ~ ("_" | letters | '0'..'9')* }
        value = @{ variable | float | int | string | boolean | null | enum_val | list | object }

        // More variables stuff
        named_type = { name }
        list_type = {"[" ~ types ~ "]"}
        non_null_type = { (named_type | list_type) ~ "!"}
        types = { named_type | list_type | non_null_type }
        default_value = { "=" ~ value }
        variable_def = { variable ~ ":" ~ types ~ default_value? }
        variable_defs = { "(" ~ variable_def? ~ ("," ~ variable_def)* ~ ")" }

        // Directive
        directive = { "@" ~ name ~ args? }

        // Selections
        selection = { field | fragment_spread | fragment_inline }
        selection_set = { "{" ~ selection+ ~ "}" }

        // Field
        alias = { name ~ ":"}
        args  = { "(" ~ arg ~ ("," ~ arg)* ~ ","? ~ ")"}
        field = { alias? ~ name ~ args? ~ directive? ~selection_set? }

        // Fragments
        fragment_name = { !"on" ~ name }
        fragment_def = { "fragment" ~ fragment_name ~ "on" ~ name ~ directive? ~ selection_set }
        fragment_spread = @{ "..." ~ fragment_name ~ directive? }
        fragment_inline = { "..." ~ ("on" ~ name)? ~ directive? ~ selection_set }

        query = { "query" ~ name? ~ variable_defs? ~ selection_set }
        mutation = { "mutation" ~ name? ~ variable_defs? ~ selection_set }
        operation = { query | mutation | selection_set }

        document = @{ SOI ~ (operation | fragment_def)+ ~ EOI }